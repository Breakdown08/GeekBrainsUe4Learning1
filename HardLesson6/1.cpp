#include <iostream>
#include <string>
#include <set>
#include <vector>; 
#include <sstream>; 
#include <thread>;
#include <mutex>;
using namespace std;

///
/// Создайте потокобезопасную оболочку для объекта cout.
/// Назовите ее pcout. Необходимо, чтобы несколько потоков 
/// могли обращаться к pcout и информация выводилась в консоль. 
/// 
/// Продемонстрируйте работу pcout.
/// 2. Реализовать функцию, возвращающую i - ое простое 
/// число(например, миллионное простое число равно 15485863).
/// Вычисления реализовать во вторичном потоке.
/// В консоли отображать прогресс вычисления(в основном потоке).
/// 
/// 3. Промоделировать следующую ситуацию.Есть два человека(2 потока) : 
/// хозяин и вор.Хозяин приносит домой вещи(функция добавляющая случайное 
/// число в вектор с периодичностью 1 раз в секунду).
/// При этом у каждой вещи есть своя ценность.
/// Вор забирает вещи(функция, которая находит наибольшее число и 
/// удаляет из вектора с периодичностью 1 раз в 0.5 секунд), 
/// каждый раз забирает вещь с наибольшей ценностью.
/// 
/// 
std::mutex coutMutex;


void pcout(string data)
{
	coutMutex.lock();
	std::cout << data << std::endl;
	coutMutex.unlock();
}


void doSomething(int number) {
	while (true)
	{
		pcout(to_string(number));
		this_thread::sleep_for(1s);
	}
}
int main()
{
	thread th1(doSomething, 1);
	thread th2(doSomething, 2);
	thread th3(doSomething, 3);
	th1.join();
	th2.join();
	th3.join();
}